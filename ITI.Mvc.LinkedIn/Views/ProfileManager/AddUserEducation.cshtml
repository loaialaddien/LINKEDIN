@model ITI.Mvc.LinkedIn.ViewModels.UserEducationViewModel

@{
    ViewBag.Title = "AddUserEducation";
}

<h2>AddUserEducation</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Posts</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



    </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Myeducation.UniversityId)
            <!--selectlist takes the list, the value within the list, the name within the list-->
            @Html.DropDownListFor(m => m.Myeducation.UniversityId, new SelectList(Model.Universities, "Id", "Name"), "select Universities", new { @class = "form-control universityid"})

            @Html.ValidationMessageFor(m => m.Myeducation.FacultyId)


        </div>
        <script>
            var fatma = document.getElementById("universityid").onselect.toString;
        </script>
    <div class="form-group">
        @Html.LabelFor(m => m.Myeducation.FacultyId)
        <!--selectlist takes the list, the value within the list, the name within the list-->
        @Html.DropDownListFor(m => m.Myeducation.FacultyId, new SelectList(Model.Faculties, "Id", "FacultyName"), "select Faculty", new { @class = "form-control" })

        @Html.ValidationMessageFor(m => m.Myeducation.FacultyId)


    </div>
          
        
    <div>
        <div class="form-group">
            @Html.LabelFor(model => model.Myeducation.Degree, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Myeducation.Degree, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Myeducation.Degree, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
