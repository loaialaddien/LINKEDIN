@m@model ITI.Mvc.LinkedIn.ViewModels.CompanyViewModel

@{
	ViewBag.Title = "EditCompany";
}

<h2>companies View</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>company</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })




		@Html.HiddenFor(m => m.company.LinkedInUserId)

		<div class="form-group">

			@Html.LabelFor(model => model.company.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.LabelFor(model => model.company.Title, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.LabelFor(model => model.company.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.LabelFor(model => model.company.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })


			<div class="col-md-10">
				@Html.EditorFor(model => model.company.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.company.Name, "", new { @class = "text-danger" })
				@Html.EditorFor(model => model.company.Title, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.company.Title, "", new { @class = "text-danger" })
				@Html.EditorFor(model => model.company.StartDate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.company.StartDate, "", new { @class = "text-danger" })
				@Html.EditorFor(model => model.company.EndDate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.company.EndDate, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Edit company" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "UserProfile", "Account")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}













